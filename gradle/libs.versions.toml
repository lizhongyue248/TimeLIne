[versions]
agp = "8.2.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.11.0"
androidx-test-junit = "1.1.5"
compose = "1.6.1"
compose-plugin = "1.6.0-beta02"
pre-compose = "1.6.0-beta02"
junit = "4.13.2"
kotlin = "1.9.22"
kotlinx = "1.6.3"
ktor = "2.3.9"
koin = "3.6.0-wasm-alpha2"
exposed = "0.48.0"
swagger = "1.0.47"
# common
app-dirs = "1.2.2"
apache-commons = "3.14.0"
json-schema = "0.9.9"
kotlinx-datetime = "0.5.0"
okio = "3.8.0"
settings = "1.1.1"
sqldelight = "2.0.1"
kermit = "2.0.3"
uuid = "0.8.2"
# log
slf4j = "2.0.12"
tinylog = "2.7.0"
# desktop
plist = "1.27"
jkeymaster = "1.3"
jSystemThemeDetector = "3.8"
# test
kotlinx-coroutines-test = "1.8.0"
mockk = "1.13.9"
hoplite = "2.7.5"


[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-auto-head-response = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-request-validation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktor-server-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-call-id = { module = "io.ktor:ktor-server-call-id", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
tinylog = { module = "org.tinylog:tinylog-api-kotlin", version.ref = "tinylog" }
tinylog-impl = { module = "org.tinylog:tinylog-impl", version.ref = "tinylog" }
tinylog-slf4j = { module = "org.tinylog:slf4j-tinylog", version.ref = "tinylog" }
plist = { module = "com.googlecode.plist:dd-plist", version.ref = "plist" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
apache-commons = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commons" }
app-dirs = { module = "net.harawata:appdirs", version.ref = "app-dirs" }
jkeymaster = { module = "com.github.tulskiy:jkeymaster", version.ref = "jkeymaster" }
jSystemThemeDetector = { module = "com.github.Dansoftowner:jSystemThemeDetector", version.ref = "jSystemThemeDetector" }
json-schema = { module = "com.github.Ricky12Awesome:json-schema-serialization", version.ref = "json-schema" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx" }
serialization-json-jvm = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm", version.ref = "kotlinx" }
serialization-json-okio = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-okio", version.ref = "kotlinx" }
pre-compose = { module = "moe.tlaster:precompose", version.ref = "pre-compose" }
koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
settings-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }
settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "settings" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-crypt = { module = "org.jetbrains.exposed:exposed-crypt", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
swagger-codegen = { module = "io.swagger.codegen.v3:swagger-codegen-generators", version.ref = "swagger" }
hoplite-json = { module = "com.sksamuel.hoplite:hoplite-json", version.ref = "hoplite"}

[bundles]
server-log = ["slf4j", "tinylog", "tinylog-impl", "tinylog-slf4j"]
server-utils = ["apache-commons", "swagger-codegen", "serialization-json-jvm"]
server-ktor = ["ktor-server-core", "ktor-server-netty", "ktor-server-swagger", "ktor-server-openapi",
    "ktor-server-compression", "ktor-server-resources", "ktor-server-auto-head-response",
    "ktor-server-request-validation", "ktor-server-serialization-json", "ktor-server-status-pages",
    "ktor-server-auth", "ktor-server-auth-jwt", "ktor-server-call-logging", "ktor-server-call-id"]
server-exposed = ["exposed-core", "exposed-crypt", "exposed-dao", "exposed-jdbc", "exposed-kotlin-datetime", "exposed-json"]
desktop = ["plist", "jkeymaster", "jSystemThemeDetector"]
kmp-common = ["kermit", "serialization-json", "serialization-json-okio", "koin",
    "koin-compose", "kotlinx-datetime", "okio", "settings-noarg", "uuid"]
server-ktor-client = ["ktor-client-core", "ktor-client-cio", "ktor-client-logging",
    "ktor-client-content-negotiation", "ktor-client-resources"]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
